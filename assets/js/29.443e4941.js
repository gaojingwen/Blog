(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{90:function(s,n,e){"use strict";e.r(n);var a=e(0),t=Object(a.a)({},function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("div",{staticClass:"content"},[s._m(0),s._v(" "),e("hr"),s._v(" "),e("h4",{attrs:{id:"面试官系列-2-既然react-vue可以用event-bus进行组件通信-你可以实现下吗"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#面试官系列-2-既然react-vue可以用event-bus进行组件通信-你可以实现下吗","aria-hidden":"true"}},[s._v("#")]),s._v(" 面试官系列(2):"),e("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fjuejin.im%2Fpost%2F5ac2fb886fb9a028b86e328c",target:"_blank",rel:"noopener noreferrer"}},[s._v("既然React/Vue可以用Event Bus进行组件通信,你可以实现下吗?"),e("OutboundLink")],1)]),s._v(" "),e("hr"),s._v(" "),s._m(1),s._v(" "),e("p",[s._v("实现一个深克隆是面试中常见的问题的,可是绝大多数面试者的答案都是不完整的,甚至是错误的,这个时候面试官会不断追问,看看你到底理解不理解深克隆的原理,很多情况下一些一知半解的面试者就原形毕漏了.")]),s._v(" "),e("p",[s._v("我们就来看一下如何实现一个深克隆,当然面试中没有让你完整实现的时候,但是你一定要搞清楚其中的坑在哪里,才可以轻松应对面试官的追问.")]),s._v(" "),e("p",[s._v("在要实现一个深克隆之前我们需要了解一下javascript中的基础类型.")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://link.juejin.im/?target=https%3A%2F%2Fgithub.com%2Fxiaomuzhu%2FElemeFE-node-interview%2Fblob%2Fmaster%2FJavaScript%25E5%259F%25BA%25E7%25A1%2580%2FJavaScript%25E5%259F%25BA%25E6%259C%25AC%25E7%25B1%25BB%25E5%259E%258B.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("javascript基础类型"),e("OutboundLink")],1)]),s._v(" "),s._m(2),s._v(" "),s._m(3),s._v(" "),e("hr"),s._v(" "),s._m(4),s._v(" "),s._m(5),s._v(" "),s._m(6),s._m(7),s._v(" "),s._m(8),s._m(9),s._v(" "),s._m(10),s._v(" "),s._m(11),s._v(" "),s._m(12),s._v(" "),e("p",[s._v("前几年微博上流传着一个传说中最便捷实现深克隆的方法, JSON对象parse方法可以将JSON字符串反序列化成JS对象，stringify方法可以将JS对象序列化成JSON字符串,这两个方法结合起来就能产生一个便捷的深克隆.")]),s._v(" "),s._m(13),e("p",[s._v("我们依然用上一节的例子进行测试")]),s._v(" "),s._m(14),e("p",[s._v("果然,这是一个实现深克隆的好方法,但是这个解决办法是不是太过简单了.")]),s._v(" "),e("p",[s._v("确实,这个方法虽然可以解决绝大部分是使用场景,但是却有很多坑.")]),s._v(" "),s._m(15),s._v(" "),s._m(16),s._v(" "),s._m(17),s._v(" "),e("p",[s._v("主要的坑就是以上几点,我们一一测试下.")]),s._v(" "),s._m(18),e("p",[s._v("我们可以看到在对函数、正则对象、稀疏数组等对象克隆时会发生意外，构造函数指向也会发生错误。")]),s._v(" "),s._m(19),e("p",[s._v("对象的循环引用会抛出错误.")]),s._v(" "),s._m(20),s._v(" "),s._m(21),s._v(" "),s._m(22),s._v(" "),e("p",[s._v("(这个方法也会出现上一节提到的问题)")]),s._v(" "),e("p",[s._v("由于要面对不同的对象(正则、数组、Date等)要采用不同的处理方式，我们需要实现一个对象类型判断函数。")]),s._v(" "),s._m(23),e("p",[s._v("这样我们就可以对特殊对象进行类型判断了,从而采用针对性的克隆策略.")]),s._v(" "),s._m(24),e("p",[s._v("对于正则对象,我们在处理之前要先补充一点新知识.")]),s._v(" "),e("p",[s._v("我们需要通过"),e("a",{attrs:{href:"https://link.juejin.im/?target=http%3A%2F%2Fes6.ruanyifeng.com%2F%23docs%2Fregex%23flags-%25E5%25B1%259E%25E6%2580%25A7",target:"_blank",rel:"noopener noreferrer"}},[s._v("正则的扩展"),e("OutboundLink")],1),s._v("了解到"),e("code",[s._v("flags")]),s._v("属性等等,因此我们需要实现一个提取flags的函数.")]),s._v(" "),s._m(25),e("p",[s._v("做好了这些准备工作,我们就可以进行深克隆的实现了.")]),s._v(" "),s._m(26),e("p",[s._v("我们做一下测试")]),s._v(" "),s._m(27),e("p",[s._v("当然,我们这个深克隆还不算完美,例如Buffer对象、Promise、Set、Map可能都需要我们做特殊处理，另外对于确保没有循环引用的对象，我们可以省去对循环引用的特殊处理，因为这很消耗时间，不过一个基本的深克隆函数我们已经实现了。")]),s._v(" "),e("hr"),s._v(" "),s._m(28),s._v(" "),s._m(29),s._v(" "),s._m(30)])},[function(){var s=this.$createElement,n=this._self._c||s;return n("h1",{attrs:{id:"面试官-请你实现一个深克隆"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#面试官-请你实现一个深克隆","aria-hidden":"true"}},[this._v("#")]),this._v(" 面试官:请你实现一个深克隆")])},function(){var s=this.$createElement,n=this._self._c||s;return n("h4",{attrs:{id:"前言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[this._v("#")]),this._v(" 前言")])},function(){var s=this.$createElement,n=this._self._c||s;return n("blockquote",[n("p",[this._v("JavaScript原始类型:Undefined、Null、Boolean、Number、String、Symbol")])])},function(){var s=this.$createElement,n=this._self._c||s;return n("blockquote",[n("p",[this._v("JavaScript引用类型:Object")])])},function(){var s=this.$createElement,n=this._self._c||s;return n("h4",{attrs:{id:"_1-浅克隆"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-浅克隆","aria-hidden":"true"}},[this._v("#")]),this._v(" 1.浅克隆")])},function(){var s=this.$createElement,n=this._self._c||s;return n("p",[n("strong",[this._v("浅克隆")]),this._v("之所以被称为"),n("strong",[this._v("浅克隆")]),this._v("，是因为对象只会被克隆最外部的一层,至于更深层的对象,则依然是通过引用指向同一块堆内存.")])},function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// 浅克隆函数\nfunction shallowClone(o) {\n  const obj = {};\n  for ( let i in o) {\n    obj[i] = o[i];\n  }\n  return obj;\n}\n// 被克隆对象\nconst oldObj = {\n  a: 1,\n  b: [ 'e', 'f', 'g' ],\n  c: { h: { i: 2 } }\n};\n\nconst newObj = shallowClone(oldObj);\nconsole.log(newObj.c.h, oldObj.c.h); // { i: 2 } { i: 2 }\nconsole.log(oldObj.c.h === newObj.c.h); // true\n\n复制代码\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])])},function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("p",[s._v("我们可以看到,很明显虽然"),e("code",[s._v("oldObj.c.h")]),s._v("被克隆了,但是它还与"),e("code",[s._v("oldObj.c.h")]),s._v("相等,这表明他们依然指向同一段堆内存,这就造成了如果对"),e("code",[s._v("newObj.c.h")]),s._v("进行修改,也会影响"),e("code",[s._v("oldObj.c.h")]),s._v(",这就不是一版好的克隆.")])},function(){var s=this.$createElement,n=this._self._c||s;return n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("newObj.c.h.i = 'change';\nconsole.log(newObj.c.h, oldObj.c.h); // { i: 'change' } { i: 'change' }\n复制代码\n")])]),this._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[this._v("1")]),n("br"),n("span",{staticClass:"line-number"},[this._v("2")]),n("br"),n("span",{staticClass:"line-number"},[this._v("3")]),n("br")])])},function(){var s=this.$createElement,n=this._self._c||s;return n("p",[this._v("我们改变了"),n("code",[this._v("newObj.c.h.i")]),this._v("的值,"),n("code",[this._v("oldObj.c.h.i")]),this._v("也被改变了,这就是浅克隆的问题所在.")])},function(){var s=this.$createElement,n=this._self._c||s;return n("p",[this._v("当然有一个新的api"),n("code",[this._v("Object.assign()")]),this._v("也可以实现浅复制,但是效果跟上面没有差别,所以我们不再细说了.")])},function(){var s=this.$createElement,n=this._self._c||s;return n("h4",{attrs:{id:"_2-深克隆"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-深克隆","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.深克隆")])},function(){var s=this.$createElement,n=this._self._c||s;return n("h5",{attrs:{id:"_2-1-json-parse方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-json-parse方法","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.1 JSON.parse方法")])},function(){var s=this.$createElement,n=this._self._c||s;return n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("const newObj = JSON.parse(JSON.stringify(oldObj));\n复制代码\n")])]),this._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[this._v("1")]),n("br"),n("span",{staticClass:"line-number"},[this._v("2")]),n("br")])])},function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const oldObj = {\n  a: 1,\n  b: [ 'e', 'f', 'g' ],\n  c: { h: { i: 2 } }\n};\n\nconst newObj = JSON.parse(JSON.stringify(oldObj));\nconsole.log(newObj.c.h, oldObj.c.h); // { i: 2 } { i: 2 }\nconsole.log(oldObj.c.h === newObj.c.h); // false\nnewObj.c.h.i = 'change';\nconsole.log(newObj.c.h, oldObj.c.h); // { i: 'change' } { i: 2 }\n\n复制代码\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])])},function(){var s=this.$createElement,n=this._self._c||s;return n("blockquote",[n("p",[this._v("1.他无法实现对函数 、RegExp等特殊对象的克隆")])])},function(){var s=this.$createElement,n=this._self._c||s;return n("blockquote",[n("p",[this._v("2.会抛弃对象的constructor,所有的构造函数会指向Object")])])},function(){var s=this.$createElement,n=this._self._c||s;return n("blockquote",[n("p",[this._v("3.对象有循环引用,会报错")])])},function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// 构造函数\nfunction person(pname) {\n  this.name = pname;\n}\n\nconst Messi = new person('Messi');\n\n// 函数\nfunction say() {\n  console.log('hi');\n};\n\nconst oldObj = {\n  a: say,\n  b: new Array(1),\n  c: new RegExp('ab+c', 'i'),\n  d: Messi\n};\n\nconst newObj = JSON.parse(JSON.stringify(oldObj));\n\n// 无法复制函数\nconsole.log(newObj.a, oldObj.a); // undefined [Function: say]\n// 稀疏数组复制错误\nconsole.log(newObj.b[0], oldObj.b[0]); // null undefined\n// 无法复制正则对象\nconsole.log(newObj.c, oldObj.c); // {} /ab+c/i\n// 构造函数指向错误\nconsole.log(newObj.d.constructor, oldObj.d.constructor); // [Function: Object] [Function: person]\n\n复制代码\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br")])])},function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const oldObj = {};\n\noldObj.a = oldObj;\n\nconst newObj = JSON.parse(JSON.stringify(oldObj));\nconsole.log(newObj.a, oldObj.a); // TypeError: Converting circular structure to JSON\n复制代码\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])])},function(){var s=this.$createElement,n=this._self._c||s;return n("h5",{attrs:{id:"_2-2-构造一个深克隆函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-构造一个深克隆函数","aria-hidden":"true"}},[this._v("#")]),this._v(" 2.2 构造一个深克隆函数")])},function(){var s=this.$createElement,n=this._self._c||s;return n("p",[this._v("我们知道要想实现一个靠谱的深克隆方法,上一节提到的"),n("strong",[this._v("序列/反序列")]),this._v("是不可能了,而通常教程里提到的方法也是不靠谱的,他们存在的问题跟上一届序列反序列操作中凸显的问题是一致的.")])},function(){var s=this.$createElement,n=this._self._c||s;return n("p",[n("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2018/3/28/1626bc7a5caf947c?imageView2/0/w/1280/h/960/format/webp/ignore-error/1",alt:"img"}})])},function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const isType = (obj, type) => {\n  if (typeof obj !== 'object') return false;\n  const typeString = Object.prototype.toString.call(obj);\n  let flag;\n  switch (type) {\n    case 'Array':\n      flag = typeString === '[object Array]';\n      break;\n    case 'Date':\n      flag = typeString === '[object Date]';\n      break;\n    case 'RegExp':\n      flag = typeString === '[object RegExp]';\n      break;\n    default:\n      flag = false;\n  }\n  return flag;\n};\n复制代码\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])])},function(){var s=this.$createElement,n=this._self._c||s;return n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("const arr = Array.of(3, 4, 5, 2);\n\nconsole.log(isType(arr, 'Array')); // true\n复制代码\n")])]),this._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[this._v("1")]),n("br"),n("span",{staticClass:"line-number"},[this._v("2")]),n("br"),n("span",{staticClass:"line-number"},[this._v("3")]),n("br"),n("span",{staticClass:"line-number"},[this._v("4")]),n("br")])])},function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const getRegExp = re => {\n  var flags = '';\n  if (re.global) flags += 'g';\n  if (re.ignoreCase) flags += 'i';\n  if (re.multiline) flags += 'm';\n  return flags;\n};\n复制代码\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])])},function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("/**\n* deep clone\n* @param  {[type]} parent object 需要进行克隆的对象\n* @return {[type]}        深克隆后的对象\n*/\nconst clone = parent => {\n  // 维护两个储存循环引用的数组\n  const parents = [];\n  const children = [];\n\n  const _clone = parent => {\n    if (parent === null) return null;\n    if (typeof parent !== 'object') return parent;\n\n    let child, proto;\n\n    if (isType(parent, 'Array')) {\n      // 对数组做特殊处理\n      child = [];\n    } else if (isType(parent, 'RegExp')) {\n      // 对正则对象做特殊处理\n      child = new RegExp(parent.source, getRegExp(parent));\n      if (parent.lastIndex) child.lastIndex = parent.lastIndex;\n    } else if (isType(parent, 'Date')) {\n      // 对Date对象做特殊处理\n      child = new Date(parent.getTime());\n    } else {\n      // 处理对象原型\n      proto = Object.getPrototypeOf(parent);\n      // 利用Object.create切断原型链\n      child = Object.create(proto);\n    }\n\n    // 处理循环引用\n    const index = parents.indexOf(parent);\n\n    if (index != -1) {\n      // 如果父数组存在本对象,说明之前已经被引用过,直接返回此对象\n      return children[index];\n    }\n    parents.push(parent);\n    children.push(child);\n\n    for (let i in parent) {\n      // 递归\n      child[i] = _clone(parent[i]);\n    }\n\n    return child;\n  };\n  return _clone(parent);\n};\n复制代码\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br")])])},function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("function person(pname) {\n  this.name = pname;\n}\n\nconst Messi = new person('Messi');\n\nfunction say() {\n  console.log('hi');\n}\n\nconst oldObj = {\n  a: say,\n  c: new RegExp('ab+c', 'i'),\n  d: Messi,\n};\n\noldObj.b = oldObj;\n\n\nconst newObj = clone(oldObj);\nconsole.log(newObj.a, oldObj.a); // [Function: say] [Function: say]\nconsole.log(newObj.b, oldObj.b); // { a: [Function: say], c: /ab+c/i, d: person { name: 'Messi' }, b: [Circular] } { a: [Function: say], c: /ab+c/i, d: person { name: 'Messi' }, b: [Circular] }\nconsole.log(newObj.c, oldObj.c); // /ab+c/i /ab+c/i\nconsole.log(newObj.d.constructor, oldObj.d.constructor); // [Function: person] [Function: person]\n复制代码\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br")])])},function(){var s=this.$createElement,n=this._self._c||s;return n("h3",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[this._v("#")]),this._v(" 总结")])},function(){var s=this.$createElement,n=this._self._c||s;return n("p",[this._v("实现一个完整的深克隆是由许多坑要踩的,npm上一些库的实现也不够完整,在生产环境中最好用"),n("code",[this._v("lodash")]),this._v("的深克隆实现.")])},function(){var s=this.$createElement,n=this._self._c||s;return n("p",[this._v("在面试过程中,我们上面提到的众多坑是面试官很可能追问你的,要知道坑在哪里,能答出来才是你的加分项,在面试过程中必须要有一两个闪光点,如果只知道"),n("strong",[this._v("序列/反序列")]),this._v("这种投机取巧的方法,在追问下不仅拿不到分,很可能造成只懂个皮毛的印象,毕竟,面试面得就是你知识的深度")])}],!1,null,null,null);t.options.__file="请你实现一个深克隆.md";n.default=t.exports}}]);